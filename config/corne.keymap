#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38  // left-hand keys
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41  // right-hand keys
#define THUMBS 36 37 38 39 40 41
#define DEFAULT        0
#define NUMBER         1
#define SYMBOL         2
#define NAV            3
#define SETTINGS       4

/ {
    behaviors {
        bhml: balanced_homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;    // <---[[moderate duration]]
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            global-quick-tap;
            hold-trigger-on-release;
        };

        bhmr: balanced_homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;    // <---[[moderate duration]]
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            global-quick-tap;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        settings_layer {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&mo 4>;
        };

        copy {
            bindings = <&kp LC(C)>;  // Ctrl+C
            key-positions = <27 26>;
        };

        paste {
            bindings = <&kp LC(V)>;  // Ctrl+V
            key-positions = <27 28>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <29 28>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
        };

        redo {
            bindings = <&kp LC(LS(Z))>;
            key-positions = <25 26 27>;
        };

        Del {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
        };

        typing {
            bindings = <&tog 5>;
            key-positions = <36 41>;
        };

        close {
            bindings = <&kp LA(F4)>;
            key-positions = <4 2>;
        };

        closew {
            bindings = <&kp LC(W)>;
            key-positions = <3 4>;
        };

        taskmanager {
            bindings = <&kp LC(LS(ESCAPE))>;
            key-positions = <0 12>;
        };

        del2 {
            bindings = <&kp DEL>;
            key-positions = <3 5>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <26 28>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp B &kp H &kp A &kp Y &kp N5 &kp N2 &kp N4 &kp N3 &kp N1 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        layer5: layer_5_is_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp T &kp H &kp DOT>;
            label = "LAYER_5_IS_ON";
        };

        anime_name: anime_name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp N &kp I &kp M &kp E &kp COLON &kp SPACE &kp RET &kp LS(S) &kp O &kp N &kp G &kp COLON &kp SPACE>;
            label = "ANIME_NAME";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE    &kp Q             &kp W         &kp F          &kp P          &kp B        &kp J      &kp L           &kp U          &kp Y         &kp SEMI       &kp BSPC
&lt 3 TAB     &bhml LEFT_GUI A  &bhml LALT R  &bhml LCTRL S  &bhml LSHFT T  &kp G        &kp M      &bhmr LSHFT N   &bhmr RCTRL E  &bhmr LALT I  &bhmr RMETA O  &kp SQT
&kp LEFT_GUI  &kp Z             &kp X         &kp C          &kp D          &kp V        &kp K      &kp H           &kp COMMA      &kp DOT       &kp FSLH       &kp ENTER
                                              &mo 2          &lt 1 TAB      &kp SPACE    &kp ENTER  &kp LEFT_SHIFT  &mo 3
            >;
        };

        number {
            bindings = <
&kp GRAVE  &kp LC(Q)         &kp LC(W)         &kp LC(F)          &kp F9             &kp LC(B)    &kp PLUS   &kp N7  &kp N8      &kp N9  &kp ASTERISK  &trans
&trans     &bhml LGUI LC(A)  &bhml LALT LC(R)  &bhml LCTRL LC(S)  &bhml LSHFT LC(T)  &kp LC(G)    &kp N0     &kp N4  &kp N5      &kp N6  &kp EQUAL     &trans
&trans     &kp LC(Z)         &kp LC(X)         &kp LC(C)          &kp LC(D)          &kp LC(V)    &kp MINUS  &kp N1  &kp N2      &kp N3  &kp SLASH     &trans
                                               &trans             &trans             &trans       &trans     &trans  &kp PERIOD
            >;
        };

        nav {
            bindings = <
&trans  &none     &email    &none      &anime_name  &none     &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END    &kp ASTERISK     &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT    &none     &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp PRINTSCREEN  &trans
&trans  &none     &none     &none      &none        &none     &none          &none           &none           &none      &none            &trans
                            &trans     &trans       &trans    &trans         &trans          &trans
            >;
        };

        mouse {
            bindings = <
&trans  &none  &none           &msc SCRL_UP    &none            &none     &msc SCRL_UP    &mkp MB1        &mmv MOVE_UP    &mkp MB2         &none     &trans
&trans  &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none     &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB3  &trans
&trans  &none  &none           &none           &none            &none     &none           &none           &none           &none            &none     &trans
                               &trans          &trans           &trans    &mkp MB1        &mkp MB2        &trans
            >;
        };

        settings {
            bindings = <
&none       &none         &none         &none         &none         &none           &kp F12  &kp F7  &kp F8  &kp F9  &kp C_VOL_UP  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F11  &kp F4  &kp F5  &kp F6  &kp C_VOL_DN  &none
&none       &none         &none         &none         &out OUT_BLE  &out OUT_USB    &kp F10  &kp F1  &kp F2  &kp F3  &kp C_MUTE    &none
                                        &kp C_PREV    &kp C_PP      &kp C_NEXT      &none    &none   &none
            >;
        };

        typing {
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp F         &kp P      &kp B        &kp J      &kp L      &kp U      &kp Y    &kp SEMI  &kp BSPC
&kp LEFT_CONTROL  &kp A  &kp R  &kp S         &kp T      &kp G        &kp M      &kp N      &kp E      &kp I    &kp O     &layer5
&kp LEFT_ALT      &kp Z  &kp X  &kp C         &kp D      &kp V        &kp K      &kp H      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                                &kp LEFT_GUI  &lt 1 TAB  &kp SPACE    &kp ENTER  &kp LSHFT  &mo 3
            >;
        };
    };
};
