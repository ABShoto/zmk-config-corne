#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38  // left-hand keys
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41  // right-hand keys
#define THUMBS 36 37 38 39 40 41
#define DEFAULT        0
#define NUMBER         1
#define SYMBOL         2
#define NAV            3
#define SETTINGS       4

/ {
    behaviors {
        bhml: balanced_homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;    // <---[[moderate duration]]
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            global-quick-tap;
            hold-trigger-on-release;
        };

        bhmr: balanced_homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "BALANCED_HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;    // <---[[moderate duration]]
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            global-quick-tap;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        settings_layer {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&mo SETTINGS>;
        };

        copy {
            bindings = <&kp LC(C)>;  // Ctrl+C
            key-positions = <27 26>;
        };

        paste {
            bindings = <&kp LC(V)>;  // Ctrl+V
            key-positions = <27 28>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <2 3>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <3 4>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
        };

        redo {
            bindings = <&kp LC(LS(Z))>;
            key-positions = <25 27 26>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <12 13>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <29 28>;
        };

        mark {
            bindings = <&kp ASTERISK>;
            key-positions = <4 5>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp B &kp H &kp A &kp Y &kp N5 &kp N2 &kp N4 &kp N3 &kp N1 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&gresc        &kp Q             &kp W         &kp F          &kp P          &kp B        &kp J      &kp L           &kp U          &kp Y         &kp SEMI       &kp BSPC
&lt 3 TAB     &bhml LEFT_GUI A  &bhml LALT R  &bhml LCTRL S  &bhml LSHFT T  &kp G        &kp M      &bhmr LSHFT N   &bhmr RCTRL E  &bhmr LALT I  &bhmr RMETA O  &kp SQT
&kp LEFT_GUI  &kp Z             &kp X         &kp C          &kp D          &kp V        &kp K      &kp H           &kp COMMA      &kp DOT       &kp FSLH       &kp ASTERISK
                                              &mo 1          &mo 2          &kp SPACE    &kp ENTER  &kp LEFT_SHIFT  &mo 3
            >;
        };

        number {
            bindings = <
&email  &kp F1    &kp AT_SIGN  &kp HASH   &kp F9     &none     &trans  &kp N7  &kp N8  &kp N9  &kp MINUS  &trans
&trans  &kp LGUI  &kp LALT     &kp LCTRL  &kp LSHFT  &none     &trans  &kp N4  &kp N5  &kp N6  &kp PLUS   &trans
&trans  &none     &none        &none      &none      &none     &trans  &kp N1  &kp N2  &kp N3  &kp EQUAL  &trans
                               &trans     &trans     &trans    &trans  &trans  &kp N0
            >;
        };

        symbol {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &kp C_VOL_UP    &kp HOME  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp INS          &kp DEL
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp C_VOL_DN    &kp END   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &none     &none     &none      &none      &kp C_MUTE      &trans    &trans          &trans          &trans        &kp C_AC_DEL     &trans
                            &trans     &trans     &trans          &trans    &trans          &trans
            >;
        };

        nav {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &none     &mkp MB1        &msc SCRL_UP    &mkp MB2         &mkp MB3         &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP     &mmv MOVE_RIGHT  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &none     &mmv MOVE_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none            &trans
                         &trans  &trans  &trans    &mkp MB1  &mkp MB2        &trans
            >;
        };

        settings {
            bindings = <
&none       &none         &none         &none         &none         &none           &kp F12  &kp F7  &kp F8  &kp F9  &kp C_VOL_UP  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F11  &kp F4  &kp F5  &kp F6  &kp C_VOL_DN  &none
&none       &none         &none         &none         &out OUT_BLE  &out OUT_USB    &kp F10  &kp F1  &kp F2  &kp F3  &kp C_MUTE    &none
                                        &kp C_PREV    &kp C_PP      &kp C_NEXT      &none    &none   &none
            >;
        };
    };
};
